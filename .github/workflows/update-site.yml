name: Update Website Data

on:
  schedule:
    # Run at 6:00 AM UTC (8:00 AM CEST) for better reliability
    - cron: '0 6 * * *'  # Daily data collection
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-data:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Prevent hanging workflows
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Update core data (daily)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          WOS_API_KEY: ${{ secrets.WOS_API_KEY }}
          SCOPUS_API_KEY: ${{ secrets.SCOPUS_API_KEY }}
          S2_API_KEY: ${{ secrets.S2_API_KEY }}
          LINKEDIN_ACCESS_TOKEN: ${{ secrets.LINKEDIN_ACCESS_TOKEN }}
          LINKEDIN_PERSON_ID: ${{ secrets.LINKEDIN_PERSON_ID }}
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          SKIP_ABOUT_GENERATION: 'true'
          SKIP_TEACHING_GENERATION: 'true'
        run: |
          npm run collect
          
      - name: Update bio (weekly on Monday)
        if: github.event.schedule && github.event_name == 'schedule'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ $(date +%u) -eq 1 ]; then
            echo "Monday detected - updating bio"
            npm run generate-about
          else
            echo "Not Monday - skipping bio update"
          fi
          
      - name: Update teaching (monthly on 1st)
        if: github.event.schedule && github.event_name == 'schedule'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ $(date +%d) -eq 01 ]; then
            echo "First of month detected - updating teaching"
            npm run generate-teaching
          else
            echo "Not first of month - skipping teaching update"
          fi
      
      - name: Commit and push if changed
        run: |
          git config --global user.name 'Website Data Bot'
          git config --global user.email 'bot@fabiogiglietto.github.io'
          git add .
          
          # Check if there are any changes to commit
          if git diff --quiet && git diff --staged --quiet; then
            echo "ðŸ“Š No data changes detected - skipping commit"
            exit 0
          fi
          
          # Build commit message based on what was updated
          UPDATES=""
          CURRENT_DAY=$(date +%u)  # 1=Monday, 7=Sunday
          CURRENT_DATE=$(date +%d)
          
          # Always include core data
          UPDATES="core data"
          
          # Add weekly updates (Mondays)
          if [ "$CURRENT_DAY" -eq 1 ]; then
            UPDATES="$UPDATES, AI biography"
          fi
          
          # Add monthly updates (1st of month)  
          if [ "$CURRENT_DATE" = "01" ]; then
            UPDATES="$UPDATES, teaching data"
          fi
          
          # Create commit
          git commit -m "ðŸ¤– Auto-update: $UPDATES ($(date +%Y-%m-%d))" -m "
          Automated daily website data collection including:
          - Publications from multiple academic sources
          - Social media activity and insights  
          - Reading list from research papers
          - Web mentions and citations
          $([ "$CURRENT_DAY" -eq 1 ] && echo "- AI-generated biography refresh")
          $([ "$CURRENT_DATE" = "01" ] && echo "- Teaching data update")
          
          ðŸ¤– Generated with [GitHub Actions](https://github.com/fabiogiglietto/fabiogiglietto.github.io/actions)
          "
          
          echo "ðŸ“¤ Pushing updates to repository..."
          git push